#pie chart
pie(table(dionice$Godina))
summary(dionice)
var(dionice$Prinos.iznad..OTP.indeksnog.fonda)
require(TeachingDemos)
var(otp)
sigma.test(otp)
help("sigma.test")
sigma.test(otp, sigma = 400)
sigma.test(otp, sigma = 20)
sigma.test(otp)
sigma.test(otp, sigmasq = 400)
sigma.test(otp, sigmasq = 400, alt="two.sided")
dionice[dionice$Godina == 2017, ]
dionice[dionice$Godina == 2017, ]$Prinos.iznad..OTP.indeksnog.fonda
otp_2017 = dionice[dionice$Godina == 2017, ]$Prinos.iznad..OTP.indeksnog.fonda
otp_2009 = dionice[dionice$Godina == 2009, ]$Prinos.iznad..OTP.indeksnog.fonda
length(otp_2009)
length(otp_2017)
t.test(otp_2017, otp_2009, alt="two-sided", var.equal = TRUE)
t.test(otp_2017, otp_2009, alt="two.sided", var.equal = TRUE)
#barplot
barplot(table(dionice$Godina))
barplot(table(otp))
#pie chart
pie(table(dionice$Godina))
mean(otp)
mean(otp, trim=0.2)
median(otp)
quantile(otp, probs = c(0.25, 0.5, 0.75))
boxplot(otp)
require(modeest)
mfv(otp)
max(otp) - min(otp)
IQR(otp)
var(otp)
sd(otp)
suppressWarnings(require(raster,quietly = TRUE))
# koeficijent varijacije
cv(irisdata$Petal.Length)
# koeficijent varijacije
cv(otp)
hist(otp)
plot(otp)
otp = dionice$Prinos.iznad..OTP.indeksnog.fonda
dobit = dionice$Prinos
boxplot(otp, dobit)
mean(otp)
mean(dobit)
t.test(otp, dobit, alternative = "l")
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean)
plot(tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean))
plot(tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean),
tapply(dionice$Prinos, dionice$Godina, mean)
)
plot(tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean)) plot(tapply(dionice$Prinos, dionice$Godina, mean))
plot(tapply(dionice$Prinos, dionice$Godina, mean))
plot(tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean))
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean)
tapply(dionice$Prinos, dionice$Godina, mean)
load("dionice.Rdata")
View(dionice)
head(dionice)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, boxplot)
mean.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), mean)
mean.by.year
mean.by.year
hist(dionice$Prinos.iznad..OTP.indeksnog.fonda)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
require(ggplot2)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
summary(dionice$Prinos.iznad..OTP.indeksnog.fonda)
require(modeest)
# mod
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mfv)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, getmode)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, getmode)
# broj promjena
dionice$Broj.promjena = dionice$Dionice
dionice$Broj.promjena = unlist(lapply(dionice$Broj.promjena, parser))
View(dionice)
# cor je 0.1 znači oni koji mijenjaju imaju blagu prednost
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena)
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena, method = "kendall")
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena, method = "spearman")
name.occurence = data.frame(table(dionice$Naziv.portfelja))
more.than.2.times = name.occurence[name.occurence$Freq > 0, ]
length(more.than.2.times$Freq)
aggregated_otp = aggregate(dionice$Prinos.iznad..OTP.indeksnog.fonda, by=list(dionice$Naziv.portfelja), FUN=mean)
agregated.otp.more.than.2.times = aggregated_otp[aggregated_otp$Group.1 %in% more.than.2.times$Var1, ]
agregated.otp.more.than.2.times
colnames(agregated.otp.more.than.2.times)[1] = "ID"
agregated.otp.more.than.2.times[with(agregated.otp.more.than.2.times, order(-x)), ]
colnames(more.than.2.times)[1] = "ID"
colnames(more.than.2.times)[1] = "ID"
more.than.2.times
together = merge(agregated.otp.more.than.2.times, more.than.2.times,by="ID")
together[with(together, order(-x)), ]
boxplot(otp, dobit)
t.test(otp, mu = 0, alt = "two.sided")
help(t.test)
t.test(otp, mu = 0, alt="greater")
#pie chart
pie(table(dionice$Godina))
#barplot
barplot(table(dionice$Godina))
otp_2017 = dionice[dionice$Godina == 2017, ]$Prinos.iznad..OTP.indeksnog.fonda
otp_2009 = dionice[dionice$Godina == 2009, ]$Prinos.iznad..OTP.indeksnog.fonda
# ovo def ne gleda varijance
t.test(otp_2017, otp_2009, alt="two.sided", var.equal = TRUE)
class(dionice$Prinos.iznad..OTP.indeksnog.fonda)
class(dionice$Godina)
levels(dionice$Godina)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, boxplot)
require(ggplot2)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
mean.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), mean)
mean.by.year
mean.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), mean)
mean.by.year
plot(mean.by.year)
median.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), median)
plot(median.by.year)
median.by.year
plot(median.by.year)
plot(as.numeric(unlist(mean.by.year[1])), as.numeric(unlist(mean.by.year[2])))
plot(unlist(mean.by.year[1]), as.numeric(unlist(mean.by.year[2])))
lines(as.numeric(unlist(mean.by.year[1])), as.numeric(unlist(mean.by.year[2])))
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, getmode)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
# dionice.2009 = read.csv("podaci/mojedionice2009.csv", header = T, sep = ",")
# dionice.2010 = read.csv("podaci/mojedionice2010.csv", header = T, sep = ",")
# dionice.2011 = read.csv("podaci/mojedionice2011.csv", header = T, sep = ",")
# dionice.2012 = read.csv("podaci/mojedionice2012.csv", header = T, sep = ",")
# dionice.2013 = read.csv("podaci/mojedionice2013.csv", header = T, sep = ",")
# dionice.2014 = read.csv("podaci/mojedionice2014.csv", header = T, sep = ",")
# dionice.2015 = read.csv("podaci/mojedionice2015.csv", header = T, sep = ",")
# dionice.2016 = read.csv("podaci/mojedionice2016.csv", header = T, sep = ",")
# dionice.2017 = read.csv("podaci/mojedionice2017.csv", header = T, sep = ",")
#
# dionice.2009$Godina = 2009
# dionice.2010$Godina = 2010
# dionice.2011$Godina = 2011
# dionice.2012$Godina = 2012
# dionice.2013$Godina = 2013
# dionice.2014$Godina = 2014
# dionice.2015$Godina = 2015
# dionice.2016$Godina = 2016
# dionice.2017$Godina = 2017
# problem koji ovdje nastaje je taj da dionice iz 2009 imaju drugačiji naziv za otp indeks
# help("colnames")
# colnames(dionice.2010)[7]
# colnames(dionice.2009)[7] = colnames(dionice.2010)[7]
# dionice.2009$Prinos.iznad..OTP.indeksnog.fonda
# dionice = rbind(
#   dionice.2009,
#   dionice.2010,
#   dionice.2011,
#   dionice.2012,
#   dionice.2013,
#   dionice.2014,
#   dionice.2015,
#   dionice.2016,
#   dionice.2017
# )
#
# dionice = na.omit(dionice)
# dionice
#
# my_function("5.34%")
# my_function("5,34%")
# my_function = function(string) {
#   s = gsub("%", "", string)
#   s = gsub(",", ".", s)
#   return(as.numeric(s))
# }
#
# dionice$Prinos.iznad..OTP.indeksnog.fonda = unlist(lapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, my_function))
# dionice$Prinos = unlist(lapply(dionice$Prinos, my_function))
# dionice$Prinos.bez.div. = unlist(lapply(dionice$Prinos.bez.div., my_function))
#
# save(dionice, file = "dionice.Rdata")
# load("dionice.Rdata")
#
# head(dionice)
#
# class(dionice$Prinos.iznad..OTP.indeksnog.fonda)
# class(dionice$Godina)
#
# levels(dionice$Godina)
# head(dionice)
# dim(dionice)
# names(dionice)
#
# dionice$Godina = as.factor(dionice$Godina)
# levels(dionice$Godina)
save(dionice, file = "dionice.Rdata")
load("dionice.Rdata")
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
require(ggplot2)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
mean.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), mean)
plot(mean.by.year)
mean.by.year
median.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), median)
plot(median.by.year)
median.by.year
hist(dionice$Prinos.iznad..OTP.indeksnog.fonda)
summary(dionice$Prinos.iznad..OTP.indeksnog.fonda)
parser = function(string) {
s = strsplit(as.character(string), "\\s+")[[1]][1]
s = gsub("[(]", "", s)
s = gsub("[)]", "", s)
return(as.numeric(s))
}
as.character(dionice$Broj.promjena[1])
parser(dionice$Broj.promjena[1])
# broj promjena
dionice$Broj.promjena = dionice$Dionice
dionice$Broj.promjena = unlist(lapply(dionice$Broj.promjena, parser))
# test na arrayu od mediana
# plotaj tocke koji na x osi imaju broj promjena
# podieli grupe na 0 i ne 0 te t test napravi
head(dionice)
save(dionice, file = "dionice.Rdata")
# cor je 0.1 znači oni koji mijenjaju imaju blagu prednost
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena)
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena, method = "kendall")
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena, method = "spearman")
name.occurence = data.frame(table(dionice$Naziv.portfelja))
more.than.2.times = name.occurence[name.occurence$Freq > 0, ]
length(more.than.2.times$Freq)
aggregated_otp = aggregate(dionice$Prinos.iznad..OTP.indeksnog.fonda, by=list(dionice$Naziv.portfelja), FUN=mean)
agregated.otp.more.than.2.times = aggregated_otp[aggregated_otp$Group.1 %in% more.than.2.times$Var1, ]
agregated.otp.more.than.2.times
colnames(agregated.otp.more.than.2.times)[1] = "ID"
agregated.otp.more.than.2.times[with(agregated.otp.more.than.2.times, order(-x)), ]
colnames(more.than.2.times)[1] = "ID"
more.than.2.times
together = merge(agregated.otp.more.than.2.times, more.than.2.times,by="ID")
together[with(together, order(-x)), ]
more.than.2.times
help(cor)
save(together, file="best_teams.Rdata")
otp = dionice$Prinos.iznad..OTP.indeksnog.fonda
dobit = dionice$Prinos
boxplot(otp, dobit)
mean(otp)
mean(dobit)
t.test(otp, dobit, alternative = "l")
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean)
tapply(dionice$Prinos, dionice$Godina, mean)
plot(tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean))
plot(tapply(dionice$Prinos, dionice$Godina, mean))
otp = dionice$Prinos.iznad..OTP.indeksnog.fonda
mean(otp)
mean(otp, trim=0.2)
median(otp)
boxplot(otp)
quantile(otp, probs = c(0.25, 0.5, 0.75))
require(modeest)
mfv(otp)
max(otp) - min(otp)
IQR(otp)
var(otp)
sd(otp)
suppressWarnings(require(raster,quietly = TRUE))
# koeficijent varijacije
cv(otp)
hist(otp)
plot(otp)
hist(otp, breaks = seq(from = min(otp) - 0.5, to = max(otp) + 0.5, length = 11))
qqnorm(otp)
mean_otp = mean(otp)
sd_opt = sd(otp)
n_opt = length(otp)
# interval pouzdanosti
alpha = 0.05
t.alpha.pola = qt(1 - alpha/2, df = length(otp) - 1)
dg = mean_otp - t.alpha.pola*sd_opt/sqrt(n_opt)
gg = mean_otp + t.alpha.pola*sd_opt/sqrt(n_opt)
interval = c(dg, gg)
interval
mean_otp
t.test(otp, mu = 0, alt = "two.sided")
# veća od 0
t = (mean_otp - 0) / (sd_opt / sqrt(n_opt))
pv = 1 - pt(t, df = n_opt-1)
pv
t.test(otp, mu = 0, alt="greater")
#pie chart
pie(table(dionice$Godina))
#barplot
barplot(table(dionice$Godina))
#velika varijanca
var(otp)
require(TeachingDemos)
help("sigma.test")
sigma.test(otp, sigmasq = 400, alt="two.sided")
otp_2017 = dionice[dionice$Godina == 2017, ]$Prinos.iznad..OTP.indeksnog.fonda
otp_2009 = dionice[dionice$Godina == 2009, ]$Prinos.iznad..OTP.indeksnog.fonda
# ovo def ne gleda varijance
t.test(otp_2017, otp_2009, alt="two.sided", var.equal = TRUE)
plot(mean.by.year)
mean.by.year
mean.by.year
plot(mean.by.year)
median.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), median)
plot(median.by.year)
median.by.year
mean.by.year
plot(mean.by.year)
plot(median.by.year)
mean.by.year
plot(mean.by.year)
median.by.year
plot(median.by.year)
require(ggplot2)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
max(dionice$Prinos.iznad..OTP.indeksnog.fonda)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
hist(dionice$Prinos.iznad..OTP.indeksnog.fonda)
# dionice.2009 = read.csv("podaci/mojedionice2009.csv", header = T, sep = ",")
# dionice.2010 = read.csv("podaci/mojedionice2010.csv", header = T, sep = ",")
# dionice.2011 = read.csv("podaci/mojedionice2011.csv", header = T, sep = ",")
# dionice.2012 = read.csv("podaci/mojedionice2012.csv", header = T, sep = ",")
# dionice.2013 = read.csv("podaci/mojedionice2013.csv", header = T, sep = ",")
# dionice.2014 = read.csv("podaci/mojedionice2014.csv", header = T, sep = ",")
# dionice.2015 = read.csv("podaci/mojedionice2015.csv", header = T, sep = ",")
# dionice.2016 = read.csv("podaci/mojedionice2016.csv", header = T, sep = ",")
# dionice.2017 = read.csv("podaci/mojedionice2017.csv", header = T, sep = ",")
#
# dionice.2009$Godina = 2009
# dionice.2010$Godina = 2010
# dionice.2011$Godina = 2011
# dionice.2012$Godina = 2012
# dionice.2013$Godina = 2013
# dionice.2014$Godina = 2014
# dionice.2015$Godina = 2015
# dionice.2016$Godina = 2016
# dionice.2017$Godina = 2017
# problem koji ovdje nastaje je taj da dionice iz 2009 imaju drugačiji naziv za otp indeks
# help("colnames")
# colnames(dionice.2010)[7]
# colnames(dionice.2009)[7] = colnames(dionice.2010)[7]
# dionice.2009$Prinos.iznad..OTP.indeksnog.fonda
# dionice = rbind(
#   dionice.2009,
#   dionice.2010,
#   dionice.2011,
#   dionice.2012,
#   dionice.2013,
#   dionice.2014,
#   dionice.2015,
#   dionice.2016,
#   dionice.2017
# )
#
# dionice = na.omit(dionice)
# dionice
#
# my_function("5.34%")
# my_function("5,34%")
# my_function = function(string) {
#   s = gsub("%", "", string)
#   s = gsub(",", ".", s)
#   return(as.numeric(s))
# }
#
# dionice$Prinos.iznad..OTP.indeksnog.fonda = unlist(lapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, my_function))
# dionice$Prinos = unlist(lapply(dionice$Prinos, my_function))
# dionice$Prinos.bez.div. = unlist(lapply(dionice$Prinos.bez.div., my_function))
#
# save(dionice, file = "dionice.Rdata")
# load("dionice.Rdata")
#
# head(dionice)
#
# class(dionice$Prinos.iznad..OTP.indeksnog.fonda)
# class(dionice$Godina)
#
# levels(dionice$Godina)
# head(dionice)
# dim(dionice)
# names(dionice)
#
# dionice$Godina = as.factor(dionice$Godina)
# levels(dionice$Godina)
save(dionice, file = "dionice.Rdata")
load("dionice.Rdata")
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, summary)
mean.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), mean)
plot(mean.by.year)
mean.by.year
median.by.year = aggregate(dionice[, c(7)], list(dionice$Godina), median)
plot(median.by.year)
median.by.year
require(ggplot2)
ggplot(dionice, aes(x=Godina, y=Prinos.iznad..OTP.indeksnog.fonda)) + geom_boxplot(aes(fill=Prinos.iznad..OTP.indeksnog.fonda))
hist(dionice$Prinos.iznad..OTP.indeksnog.fonda)
summary(dionice$Prinos.iznad..OTP.indeksnog.fonda)
parser = function(string) {
s = strsplit(as.character(string), "\\s+")[[1]][1]
s = gsub("[(]", "", s)
s = gsub("[)]", "", s)
return(as.numeric(s))
}
as.character(dionice$Broj.promjena[1])
parser(dionice$Broj.promjena[1])
# broj promjena
dionice$Broj.promjena = dionice$Dionice
dionice$Broj.promjena = unlist(lapply(dionice$Broj.promjena, parser))
# test na arrayu od mediana
# plotaj tocke koji na x osi imaju broj promjena
# podieli grupe na 0 i ne 0 te t test napravi
head(dionice)
save(dionice, file = "dionice.Rdata")
# cor je 0.1 znači oni koji mijenjaju imaju blagu prednost
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena)
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena, method = "kendall")
cor(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Broj.promjena, method = "spearman")
name.occurence = data.frame(table(dionice$Naziv.portfelja))
more.than.2.times = name.occurence[name.occurence$Freq > 0, ]
length(more.than.2.times$Freq)
aggregated_otp = aggregate(dionice$Prinos.iznad..OTP.indeksnog.fonda, by=list(dionice$Naziv.portfelja), FUN=mean)
agregated.otp.more.than.2.times = aggregated_otp[aggregated_otp$Group.1 %in% more.than.2.times$Var1, ]
agregated.otp.more.than.2.times
colnames(agregated.otp.more.than.2.times)[1] = "ID"
agregated.otp.more.than.2.times[with(agregated.otp.more.than.2.times, order(-x)), ]
colnames(more.than.2.times)[1] = "ID"
more.than.2.times
together = merge(agregated.otp.more.than.2.times, more.than.2.times,by="ID")
together[with(together, order(-x)), ]
more.than.2.times
help(cor)
save(together, file="best_teams.Rdata")
otp = dionice$Prinos.iznad..OTP.indeksnog.fonda
dobit = dionice$Prinos
boxplot(otp, dobit)
mean(otp)
mean(dobit)
t.test(otp, dobit, alternative = "l")
tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean)
tapply(dionice$Prinos, dionice$Godina, mean)
plot(tapply(dionice$Prinos.iznad..OTP.indeksnog.fonda, dionice$Godina, mean))
plot(tapply(dionice$Prinos, dionice$Godina, mean))
otp = dionice$Prinos.iznad..OTP.indeksnog.fonda
mean(otp)
mean(otp, trim=0.2)
median(otp)
boxplot(otp)
quantile(otp, probs = c(0.25, 0.5, 0.75))
require(modeest)
mfv(otp)
max(otp) - min(otp)
IQR(otp)
var(otp)
sd(otp)
suppressWarnings(require(raster,quietly = TRUE))
# koeficijent varijacije
cv(otp)
hist(otp)
plot(otp)
hist(otp, breaks = seq(from = min(otp) - 0.5, to = max(otp) + 0.5, length = 11))
qqnorm(otp)
mean_otp = mean(otp)
sd_opt = sd(otp)
n_opt = length(otp)
# interval pouzdanosti
alpha = 0.05
t.alpha.pola = qt(1 - alpha/2, df = length(otp) - 1)
dg = mean_otp - t.alpha.pola*sd_opt/sqrt(n_opt)
gg = mean_otp + t.alpha.pola*sd_opt/sqrt(n_opt)
interval = c(dg, gg)
interval
mean_otp
t.test(otp, mu = 0, alt = "two.sided")
# veća od 0
t = (mean_otp - 0) / (sd_opt / sqrt(n_opt))
pv = 1 - pt(t, df = n_opt-1)
pv
t.test(otp, mu = 0, alt="greater")
#pie chart
pie(table(dionice$Godina))
#barplot
barplot(table(dionice$Godina))
#velika varijanca
var(otp)
require(TeachingDemos)
help("sigma.test")
sigma.test(otp, sigmasq = 400, alt="two.sided")
otp_2017 = dionice[dionice$Godina == 2017, ]$Prinos.iznad..OTP.indeksnog.fonda
otp_2009 = dionice[dionice$Godina == 2009, ]$Prinos.iznad..OTP.indeksnog.fonda
# ovo def ne gleda varijance
t.test(otp_2017, otp_2009, alt="two.sided", var.equal = TRUE)
plot(median.by.year)
plot(mean.by.year)
summary(dionice$Prinos.iznad..OTP.indeksnog.fonda)
IQR(otp)
IQR(otp), var(otp)
IQR(otp); var(otp)
help("mean")
otp = dionice$Prinos.iznad..OTP.indeksnog.fonda
mean(otp, trim=0.2)
